name: Testing and deployment

on:
  push:
    branches:
      - master

jobs:
  integrationtests:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: root # default root password to use must be 'root'
      DB_HOST: '127.0.0.1'
      DB_PORT: '3306'
      DB_DATABASE: share_a_meal
      DB_USER: root
      DB_PASSWORD: root
    services:
      mysql:
        image: mysql:5.7
        ports:
          - '3306'
    steps:
      - uses: actions/checkout@master

      - name: Start MySQL connection from host
        run: |
          sudo /etc/init.d/mysql start
          sudo apt-get install -y mysql-client
          mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} -e "SHOW DATABASES;"
          mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE ${{env.DB_DATABASE}};"

      - name: Import database script
        run: |
          mysql -uroot -p${{env.MYSQL_ROOT_PASSWORD}} ${{env.DB_DATABASE}} < share-a-meal.sql
          mysql -uroot -p${{env.MYSQL_ROOT_PASSWORD}} ${{env.DB_DATABASE}} -e "SHOW TABLES;"

      - name: npm install
        run: |
          npm install

      - name: npm test
        run: |
          npm test -- --DB_PASSWORD {{env.MYSQL_ROOT_PASSWORD}} --DB_USER root --DB_NAME ${{env.DB_DATABASE}}


  Render-deploy:
    needs: integrationtests
    runs-on: ubuntu-latest
    steps:
      - name: Checkoutcode
        uses: actions/checkout@v2

      - name: Install Render CLI
        run: npm i render-cli -g 

      - name: Install project dependencies
        run: npm ci

      - name: Deploy server to render
        env: 
          RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        run: | 
          render deploy \
            --env ENV_ID \
            --build-command "src/$yarn" \
            --start-command "src/npm run dev" \
            --engine pug

      - name: Verify deployment
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://shareameal-90qv.onrender.com/api/user)
          if [ "$response" -eq 200 ]; then
            echo "Server deployment successful"
          else
            echo "Server deployment failed"
            exit 1
          fi

    
